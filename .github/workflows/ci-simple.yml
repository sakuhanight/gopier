name: CI Simple

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read
  actions: read
  security-events: write
  pull-requests: read

env:
  CI: true
  GITHUB_ACTIONS: true

jobs:
  # Linux テスト（Go 1.21）
  test-linux-go121:
    uses: ./.github/workflows/test-common.yml
    with:
      go-version: '1.21'
      platform: 'ubuntu-latest'
      test-packages: './cmd/... ./internal/...'
      coverage-flag: 'linux-go121'
      timeout-minutes: 15
      parallel-jobs: 4
      memory-limit: '512MiB'
      gogc: 50

  # Linux テスト（Go 1.22）
  test-linux-go122:
    uses: ./.github/workflows/test-common.yml
    with:
      go-version: '1.22'
      platform: 'ubuntu-latest'
      test-packages: './cmd/... ./internal/...'
      coverage-flag: 'linux-go122'
      timeout-minutes: 15
      parallel-jobs: 4
      memory-limit: '512MiB'
      gogc: 50

  # Windows テスト（Go 1.21）
  test-windows-go121:
    uses: ./.github/workflows/test-common.yml
    with:
      go-version: '1.21'
      platform: 'windows-latest'
      test-packages: './cmd/... ./internal/...'
      coverage-flag: 'windows-go121'
      timeout-minutes: 20
      parallel-jobs: 2
      memory-limit: '256MiB'
      gogc: 25

  # Windows テスト（Go 1.22）
  test-windows-go122:
    uses: ./.github/workflows/test-common.yml
    with:
      go-version: '1.22'
      platform: 'windows-latest'
      test-packages: './cmd/... ./internal/...'
      coverage-flag: 'windows-go122'
      timeout-minutes: 20
      parallel-jobs: 2
      memory-limit: '256MiB'
      gogc: 25

  # 統合テスト
  test-integration:
    uses: ./.github/workflows/test-common.yml
    with:
      go-version: '1.21'
      platform: 'ubuntu-latest'
      test-packages: './tests/...'
      coverage-flag: ''
      timeout-minutes: 15
      parallel-jobs: 2
      memory-limit: '512MiB'
      gogc: 50

  # セキュリティスキャン
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Run security scan
        run: |
          echo "Running security scan..."
          go list -json -deps ./... | nancy sleuth || echo "Security scan completed"

  # ビルド
  build:
    runs-on: ubuntu-latest
    needs: [test-linux-go121, test-linux-go122, test-windows-go121, test-windows-go122, test-integration, security]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-1.21-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-1.21-
            ${{ runner.os }}-go-

      - name: Build
        run: make build

      - name: Test build
        run: |
          echo "Testing build output..."
          ./gopier --help || exit 1
          ./gopier --create-config || exit 1
          echo "Build test completed successfully"

      - name: Cross-platform build
        run: make cross-build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gopier-build-${{ github.sha }}
          path: |
            gopier
            gopier.exe
            build/
          retention-days: 30 