name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

# デフォルトの権限設定
permissions:
  contents: read
  actions: read
  security-events: write
  pull-requests: read

# 環境変数の定義
env:
  CI: true
  GITHUB_ACTIONS: true
  TESTING: 1
  TEST_OUTPUT_DIR: ./test_output
  COVERAGE_DIR: ./coverage_reports
  BUILD_OUTPUT_DIR: ./build_output
  DIST_DIR: ./dist

jobs:
  # Linux/macOS テストジョブ
  test-linux:
    uses: ./.github/workflows/test.yml
    with:
      go-version: '1.21'
      platform: '["self-hosted", "Linux"]'
      coverage-flag: ${{ github.ref == 'refs/heads/develop' && 'develop' || 'unittests' }}
      timeout-minutes: 20

  test-linux-go122:
    uses: ./.github/workflows/test.yml
    with:
      go-version: '1.22'
      platform: '["self-hosted", "Linux"]'
      coverage-flag: ${{ github.ref == 'refs/heads/develop' && 'develop' || 'unittests' }}
      timeout-minutes: 20

  test-windows:
    uses: ./.github/workflows/test.yml
    with:
      go-version: '1.21'
      platform: '["self-hosted", "Windows"]'
      coverage-flag: ${{ github.ref == 'refs/heads/develop' && 'develop' || 'unittests' }}
      timeout-minutes: 35

  test-windows-go122:
    uses: ./.github/workflows/test.yml
    with:
      go-version: '1.22'
      platform: '["self-hosted", "Windows"]'
      coverage-flag: ${{ github.ref == 'refs/heads/develop' && 'develop' || 'unittests' }}
      timeout-minutes: 35



  # ベンチマークテストジョブ
  benchmark-linux:
    uses: ./.github/workflows/benchmark.yml
    with:
      go-version: '1.21'
      platform: '["self-hosted", "Linux"]'
      timeout-minutes: 30

  benchmark-windows:
    uses: ./.github/workflows/benchmark.yml
    with:
      go-version: '1.21'
      platform: '["self-hosted", "Windows"]'
      timeout-minutes: 35

  # ビルドジョブ
  build:
    runs-on: [self-hosted, Linux]
    needs: [
      test-linux, 
      test-linux-go122,
      test-windows,
      test-windows-go122,
      benchmark-linux,
      benchmark-windows
    ]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-1.21-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-1.21-
            ${{ runner.os }}-go-

      - name: Setup build environment
        run: |
          mkdir -p build_output dist
          chmod 755 build_output dist

      - name: Build
        run: make build

      - name: Test build
        run: |
          echo "Testing build output..."
          ./gopier --help || exit 1
          ./gopier --create-config || exit 1
          echo "Build test completed successfully"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gopier-build-${{ github.sha }}
          path: |
            gopier
            build_output/
            dist/
          retention-days: 30 