name: Security

on:
  workflow_call:
    inputs:
      go-version:
        description: 'Go version to use'
        required: true
        type: string
        default: '1.21'
      platform:
        description: 'Platform to run security scans on'
        required: true
        type: string
        default: 'self-hosted'
      timeout-minutes:
        description: 'Timeout for the job'
        required: false
        type: number
        default: 15

jobs:
  security:
    runs-on: ${{ inputs.platform }}
    timeout-minutes: ${{ inputs.timeout-minutes }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ inputs.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ inputs.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ inputs.go-version }}-
            ${{ runner.os }}-go-

      - name: Install security tools
        run: |
          echo "Installing security scanners..."
          go install github.com/sonatype-nexus-community/nancy@latest
          go install golang.org/x/vuln/cmd/govulncheck@latest
          go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest

      - name: Run Nancy security scan
        run: |
          echo "Running Nancy security scan..."
          go list -json -deps ./... | nancy sleuth || echo "Nancy scan completed"

      - name: Run Go vulnerability check
        run: |
          echo "Running Go vulnerability check..."
          govulncheck ./... || echo "Vulnerability check completed"

      - name: Run gosec security scan
        run: |
          echo "Running gosec security scan..."
          gosec ./... || echo "gosec scan completed"

      - name: Run dependency audit
        run: |
          echo "Running dependency audit..."
          go mod verify
          go list -m all | head -20 || echo "Dependency list completed"

      - name: Check for known vulnerabilities
        run: |
          echo "Checking for known vulnerabilities..."
          # 既知の脆弱性パターンをチェック
          if grep -r "CVE-" . --include="*.go" --include="*.mod" --include="*.sum"; then
            echo "Potential CVE references found"
          else
            echo "No CVE references found"
          fi

      - name: Upload security report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-report-${{ runner.os }}-${{ inputs.go-version }}
          path: |
            *.log
            *.txt
          retention-days: 30 